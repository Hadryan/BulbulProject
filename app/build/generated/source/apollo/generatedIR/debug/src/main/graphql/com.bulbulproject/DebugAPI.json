{
	"operations": [
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/AlbumQuery.graphql",
			"operationName": "AlbumQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query AlbumQuery($id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  albums(id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    id\n    name\n    image\n    artists {\n      __typename\n      name\n    }\n    tracks {\n      __typename\n      id\n      name\n      spotify_track_id\n      artists {\n        __typename\n        name\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "albums",
					"fieldName": "albums",
					"type": "[Album]",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "Int!"
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!"
						},
						{
							"responseName": "image",
							"fieldName": "image",
							"type": "String"
						},
						{
							"responseName": "artists",
							"fieldName": "artists",
							"type": "[Artist]",
							"fields": [
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "tracks",
							"fieldName": "tracks",
							"type": "[Track]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								},
								{
									"responseName": "spotify_track_id",
									"fieldName": "spotify_track_id",
									"type": "String"
								},
								{
									"responseName": "artists",
									"fieldName": "artists",
									"type": "[Artist]",
									"fields": [
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!"
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/ArtistQuery.graphql",
			"operationName": "ArtistQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query ArtistQuery($id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  artists(id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    id\n    name\n    image\n    albums {\n      __typename\n      id\n      name\n      image\n      artists {\n        __typename\n        name\n      }\n      tracksCount\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "artists",
					"fieldName": "artists",
					"type": "[Artist]",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "Int!"
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!"
						},
						{
							"responseName": "image",
							"fieldName": "image",
							"type": "String"
						},
						{
							"responseName": "albums",
							"fieldName": "albums",
							"type": "[Album]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								},
								{
									"responseName": "image",
									"fieldName": "image",
									"type": "String"
								},
								{
									"responseName": "artists",
									"fieldName": "artists",
									"type": "[Artist]",
									"fields": [
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!"
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "tracksCount",
									"fieldName": "tracksCount",
									"type": "Int"
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/AuthenticationQuery.graphql",
			"operationName": "authenticationQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "email",
					"type": "String!"
				},
				{
					"name": "password",
					"type": "String!"
				}
			],
			"source": "query authenticationQuery($email: String!, $password: String!) {\n  authentication(email: $email, password: $password)\n}",
			"fields": [
				{
					"responseName": "authentication",
					"fieldName": "authentication",
					"type": "String",
					"args": [
						{
							"name": "email",
							"value": {
								"kind": "Variable",
								"variableName": "email"
							}
						},
						{
							"name": "password",
							"value": {
								"kind": "Variable",
								"variableName": "password"
							}
						}
					]
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/FollowersQuery.graphql",
			"operationName": "FollowersQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "token",
					"type": "String"
				},
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query FollowersQuery($token: String, $id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  users(token: $token, id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    followers {\n      __typename\n      id\n      username\n      image\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "users",
					"fieldName": "users",
					"type": "[BulbulUser]",
					"args": [
						{
							"name": "token",
							"value": {
								"kind": "Variable",
								"variableName": "token"
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "followers",
							"fieldName": "followers",
							"type": "[BulbulUser]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "username",
									"fieldName": "username",
									"type": "String!"
								},
								{
									"responseName": "image",
									"fieldName": "image",
									"type": "String"
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/FollowingsQuery.graphql",
			"operationName": "FollowingsQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "token",
					"type": "String"
				},
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query FollowingsQuery($token: String, $id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  users(token: $token, id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    followedUsers {\n      __typename\n      id\n      username\n      image\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "users",
					"fieldName": "users",
					"type": "[BulbulUser]",
					"args": [
						{
							"name": "token",
							"value": {
								"kind": "Variable",
								"variableName": "token"
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "followedUsers",
							"fieldName": "followedUsers",
							"type": "[BulbulUser]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "username",
									"fieldName": "username",
									"type": "String!"
								},
								{
									"responseName": "image",
									"fieldName": "image",
									"type": "String"
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/PlaylistsQuery.graphql",
			"operationName": "PlaylistsQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query PlaylistsQuery($id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  playlists(id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    id\n    name\n    tracks {\n      __typename\n      id\n      name\n      spotify_track_id\n      artists {\n        __typename\n        name\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "playlists",
					"fieldName": "playlists",
					"type": "[Playlist]",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "Int!"
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!"
						},
						{
							"responseName": "tracks",
							"fieldName": "tracks",
							"type": "[Track]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								},
								{
									"responseName": "spotify_track_id",
									"fieldName": "spotify_track_id",
									"type": "String"
								},
								{
									"responseName": "artists",
									"fieldName": "artists",
									"type": "[Artist]",
									"fields": [
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!"
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/ProfileQuery.graphql",
			"operationName": "ProfileQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "token",
					"type": "String"
				},
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query ProfileQuery($token: String, $id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  users(token: $token, id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    id\n    username\n    image\n    followersCount\n    followedUsersCount\n  }\n}",
			"fields": [
				{
					"responseName": "users",
					"fieldName": "users",
					"type": "[BulbulUser]",
					"args": [
						{
							"name": "token",
							"value": {
								"kind": "Variable",
								"variableName": "token"
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "Int!"
						},
						{
							"responseName": "username",
							"fieldName": "username",
							"type": "String!"
						},
						{
							"responseName": "image",
							"fieldName": "image",
							"type": "String"
						},
						{
							"responseName": "followersCount",
							"fieldName": "followersCount",
							"type": "Int"
						},
						{
							"responseName": "followedUsersCount",
							"fieldName": "followedUsersCount",
							"type": "Int"
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/RegisterMutation.graphql",
			"operationName": "registerMutation",
			"operationType": "mutation",
			"variables": [
				{
					"name": "username",
					"type": "String!"
				},
				{
					"name": "email",
					"type": "String!"
				},
				{
					"name": "password",
					"type": "String!"
				}
			],
			"source": "mutation registerMutation($username: String!, $email: String!, $password: String!) {\n  register(username: $username, password: $password, email: $email)\n}",
			"fields": [
				{
					"responseName": "register",
					"fieldName": "register",
					"type": "String",
					"args": [
						{
							"name": "username",
							"value": {
								"kind": "Variable",
								"variableName": "username"
							}
						},
						{
							"name": "password",
							"value": {
								"kind": "Variable",
								"variableName": "password"
							}
						},
						{
							"name": "email",
							"value": {
								"kind": "Variable",
								"variableName": "email"
							}
						}
					]
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/TrackQuery.graphql",
			"operationName": "TrackQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				},
				{
					"name": "min_acousticness",
					"type": "Float"
				},
				{
					"name": "max_acousticness",
					"type": "Float"
				},
				{
					"name": "min_liveness",
					"type": "Float"
				},
				{
					"name": "max_liveness",
					"type": "Float"
				},
				{
					"name": "min_speechiness",
					"type": "Float"
				},
				{
					"name": "max_speechiness",
					"type": "Float"
				},
				{
					"name": "min_valence",
					"type": "Float"
				},
				{
					"name": "max_valence",
					"type": "Float"
				},
				{
					"name": "min_danceability",
					"type": "Float"
				},
				{
					"name": "max_danceability",
					"type": "Float"
				},
				{
					"name": "min_instrumentalness",
					"type": "Float"
				},
				{
					"name": "max_instrumentalness",
					"type": "Float"
				},
				{
					"name": "min_tempo",
					"type": "Float"
				},
				{
					"name": "max_tempo",
					"type": "Float"
				},
				{
					"name": "min_energy",
					"type": "Float"
				},
				{
					"name": "max_energy",
					"type": "Float"
				},
				{
					"name": "min_loudness",
					"type": "Float"
				},
				{
					"name": "max_loudness",
					"type": "Float"
				}
			],
			"source": "query TrackQuery($id: Int, $limit: Int, $skip: Int, $ids: [Int], $min_acousticness: Float, $max_acousticness: Float, $min_liveness: Float, $max_liveness: Float, $min_speechiness: Float, $max_speechiness: Float, $min_valence: Float, $max_valence: Float, $min_danceability: Float, $max_danceability: Float, $min_instrumentalness: Float, $max_instrumentalness: Float, $min_tempo: Float, $max_tempo: Float, $min_energy: Float, $max_energy: Float, $min_loudness: Float, $max_loudness: Float) {\n  tracks(id: $id, limit: $limit, skip: $skip, ids: $ids, min_acousticness: $min_acousticness, max_acousticness: $max_acousticness, min_liveness: $min_liveness, max_liveness: $max_liveness, min_speechiness: $min_speechiness, max_speechiness: $max_speechiness, min_valence: $min_valence, max_valence: $max_valence, min_danceability: $min_danceability, max_danceability: $max_danceability, min_instrumentalness: $min_instrumentalness, max_instrumentalness: $max_instrumentalness, min_tempo: $min_tempo, max_tempo: $max_tempo, min_energy: $min_energy, max_energy: $max_energy, min_loudness: $min_loudness, max_loudness: $max_loudness) {\n    __typename\n    id\n    name\n    artists {\n      __typename\n      id\n      name\n      tags {\n        __typename\n        tag_name\n      }\n      image\n      biography_text\n      lastfm_url\n      mbid\n      listener_count\n      play_count\n      biography_url\n    }\n    albums {\n      __typename\n      id\n      name\n      image\n    }\n    spotify_album_img\n    spotify_track_preview_url\n    duration\n    spotify_track_id\n  }\n}",
			"fields": [
				{
					"responseName": "tracks",
					"fieldName": "tracks",
					"type": "[Track]",
					"args": [
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						},
						{
							"name": "min_acousticness",
							"value": {
								"kind": "Variable",
								"variableName": "min_acousticness"
							}
						},
						{
							"name": "max_acousticness",
							"value": {
								"kind": "Variable",
								"variableName": "max_acousticness"
							}
						},
						{
							"name": "min_liveness",
							"value": {
								"kind": "Variable",
								"variableName": "min_liveness"
							}
						},
						{
							"name": "max_liveness",
							"value": {
								"kind": "Variable",
								"variableName": "max_liveness"
							}
						},
						{
							"name": "min_speechiness",
							"value": {
								"kind": "Variable",
								"variableName": "min_speechiness"
							}
						},
						{
							"name": "max_speechiness",
							"value": {
								"kind": "Variable",
								"variableName": "max_speechiness"
							}
						},
						{
							"name": "min_valence",
							"value": {
								"kind": "Variable",
								"variableName": "min_valence"
							}
						},
						{
							"name": "max_valence",
							"value": {
								"kind": "Variable",
								"variableName": "max_valence"
							}
						},
						{
							"name": "min_danceability",
							"value": {
								"kind": "Variable",
								"variableName": "min_danceability"
							}
						},
						{
							"name": "max_danceability",
							"value": {
								"kind": "Variable",
								"variableName": "max_danceability"
							}
						},
						{
							"name": "min_instrumentalness",
							"value": {
								"kind": "Variable",
								"variableName": "min_instrumentalness"
							}
						},
						{
							"name": "max_instrumentalness",
							"value": {
								"kind": "Variable",
								"variableName": "max_instrumentalness"
							}
						},
						{
							"name": "min_tempo",
							"value": {
								"kind": "Variable",
								"variableName": "min_tempo"
							}
						},
						{
							"name": "max_tempo",
							"value": {
								"kind": "Variable",
								"variableName": "max_tempo"
							}
						},
						{
							"name": "min_energy",
							"value": {
								"kind": "Variable",
								"variableName": "min_energy"
							}
						},
						{
							"name": "max_energy",
							"value": {
								"kind": "Variable",
								"variableName": "max_energy"
							}
						},
						{
							"name": "min_loudness",
							"value": {
								"kind": "Variable",
								"variableName": "min_loudness"
							}
						},
						{
							"name": "max_loudness",
							"value": {
								"kind": "Variable",
								"variableName": "max_loudness"
							}
						}
					],
					"fields": [
						{
							"responseName": "id",
							"fieldName": "id",
							"type": "Int!"
						},
						{
							"responseName": "name",
							"fieldName": "name",
							"type": "String!"
						},
						{
							"responseName": "artists",
							"fieldName": "artists",
							"type": "[Artist]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								},
								{
									"responseName": "tags",
									"fieldName": "tags",
									"type": "[Tag]",
									"fields": [
										{
											"responseName": "tag_name",
											"fieldName": "tag_name",
											"type": "String!"
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								},
								{
									"responseName": "image",
									"fieldName": "image",
									"type": "String"
								},
								{
									"responseName": "biography_text",
									"fieldName": "biography_text",
									"type": "String"
								},
								{
									"responseName": "lastfm_url",
									"fieldName": "lastfm_url",
									"type": "String"
								},
								{
									"responseName": "mbid",
									"fieldName": "mbid",
									"type": "String"
								},
								{
									"responseName": "listener_count",
									"fieldName": "listener_count",
									"type": "Int"
								},
								{
									"responseName": "play_count",
									"fieldName": "play_count",
									"type": "Int"
								},
								{
									"responseName": "biography_url",
									"fieldName": "biography_url",
									"type": "String"
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "albums",
							"fieldName": "albums",
							"type": "[Album]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								},
								{
									"responseName": "image",
									"fieldName": "image",
									"type": "String"
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						},
						{
							"responseName": "spotify_album_img",
							"fieldName": "spotify_album_img",
							"type": "String"
						},
						{
							"responseName": "spotify_track_preview_url",
							"fieldName": "spotify_track_preview_url",
							"type": "String"
						},
						{
							"responseName": "duration",
							"fieldName": "duration",
							"type": "Int"
						},
						{
							"responseName": "spotify_track_id",
							"fieldName": "spotify_track_id",
							"type": "String"
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/UserAlbumsQuery.graphql",
			"operationName": "UserAlbumsQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "token",
					"type": "String"
				},
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query UserAlbumsQuery($token: String, $id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  users(token: $token, id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    listenedAlbums {\n      __typename\n      id\n      name\n      image\n      tracksCount\n      artists {\n        __typename\n        name\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "users",
					"fieldName": "users",
					"type": "[BulbulUser]",
					"args": [
						{
							"name": "token",
							"value": {
								"kind": "Variable",
								"variableName": "token"
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "listenedAlbums",
							"fieldName": "listenedAlbums",
							"type": "[Album]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								},
								{
									"responseName": "image",
									"fieldName": "image",
									"type": "String"
								},
								{
									"responseName": "tracksCount",
									"fieldName": "tracksCount",
									"type": "Int"
								},
								{
									"responseName": "artists",
									"fieldName": "artists",
									"type": "[Artist]",
									"fields": [
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!"
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/UserArtistsQuery.graphql",
			"operationName": "UserArtistsQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "token",
					"type": "String"
				},
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query UserArtistsQuery($token: String, $id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  users(token: $token, id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    listenedArtists {\n      __typename\n      id\n      name\n      image\n      albumsCount\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "users",
					"fieldName": "users",
					"type": "[BulbulUser]",
					"args": [
						{
							"name": "token",
							"value": {
								"kind": "Variable",
								"variableName": "token"
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "listenedArtists",
							"fieldName": "listenedArtists",
							"type": "[Artist]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								},
								{
									"responseName": "image",
									"fieldName": "image",
									"type": "String"
								},
								{
									"responseName": "albumsCount",
									"fieldName": "albumsCount",
									"type": "Int"
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/UserPlaylistsQuery.graphql",
			"operationName": "UserPlaylistsQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "token",
					"type": "String"
				},
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query UserPlaylistsQuery($token: String, $id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  users(token: $token, id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    playlists {\n      __typename\n      id\n      name\n      tracksCount\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "users",
					"fieldName": "users",
					"type": "[BulbulUser]",
					"args": [
						{
							"name": "token",
							"value": {
								"kind": "Variable",
								"variableName": "token"
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "playlists",
							"fieldName": "playlists",
							"type": "[Playlist]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								},
								{
									"responseName": "tracksCount",
									"fieldName": "tracksCount",
									"type": "Int"
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		},
		{
			"filePath": "/Users/mesutgurlek/Documents/SeniorProject/BulbulProject/app/src/main/graphql/com.bulbulproject/UserSongsQuery.graphql",
			"operationName": "UserSongsQuery",
			"operationType": "query",
			"variables": [
				{
					"name": "token",
					"type": "String"
				},
				{
					"name": "id",
					"type": "Int"
				},
				{
					"name": "limit",
					"type": "Int"
				},
				{
					"name": "skip",
					"type": "Int"
				},
				{
					"name": "ids",
					"type": "[Int]"
				}
			],
			"source": "query UserSongsQuery($token: String, $id: Int, $limit: Int, $skip: Int, $ids: [Int]) {\n  users(token: $token, id: $id, limit: $limit, skip: $skip, ids: $ids) {\n    __typename\n    listenedTracks {\n      __typename\n      id\n      spotify_track_id\n      name\n      artists {\n        __typename\n        name\n      }\n    }\n  }\n}",
			"fields": [
				{
					"responseName": "users",
					"fieldName": "users",
					"type": "[BulbulUser]",
					"args": [
						{
							"name": "token",
							"value": {
								"kind": "Variable",
								"variableName": "token"
							}
						},
						{
							"name": "id",
							"value": {
								"kind": "Variable",
								"variableName": "id"
							}
						},
						{
							"name": "limit",
							"value": {
								"kind": "Variable",
								"variableName": "limit"
							}
						},
						{
							"name": "skip",
							"value": {
								"kind": "Variable",
								"variableName": "skip"
							}
						},
						{
							"name": "ids",
							"value": {
								"kind": "Variable",
								"variableName": "ids"
							}
						}
					],
					"fields": [
						{
							"responseName": "listenedTracks",
							"fieldName": "listenedTracks",
							"type": "[Track]",
							"fields": [
								{
									"responseName": "id",
									"fieldName": "id",
									"type": "Int!"
								},
								{
									"responseName": "spotify_track_id",
									"fieldName": "spotify_track_id",
									"type": "String"
								},
								{
									"responseName": "name",
									"fieldName": "name",
									"type": "String!"
								},
								{
									"responseName": "artists",
									"fieldName": "artists",
									"type": "[Artist]",
									"fields": [
										{
											"responseName": "name",
											"fieldName": "name",
											"type": "String!"
										}
									],
									"fragmentSpreads": [],
									"inlineFragments": []
								}
							],
							"fragmentSpreads": [],
							"inlineFragments": []
						}
					],
					"fragmentSpreads": [],
					"inlineFragments": []
				}
			],
			"fragmentsReferenced": []
		}
	],
	"fragments": [],
	"typesUsed": []
}